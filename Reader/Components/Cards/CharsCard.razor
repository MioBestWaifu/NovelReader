@using Mio.Reader.Services
<div class="d-flex flex-column gap-3" style="direction:ltr">
    @foreach (JapaneseCharacter character in Chars)
    {
        <div>
            @if (character is Kanji kanji)
            {
                <div>
                    <p>@kanji.Literal</p>
                    @if (kanji.Entry is not null)
                    {
                        @foreach (RmElement group in kanji.Entry.RmGroups)
                        {
                            try
                            {
                                <div>
                                    <p>@string.Join(", ", group.Readings)</p>
                                    <p>@string.Join(", ", group.Meanings)</p>
                                </div>
                            }
                            catch (Exception e)
                            {
                            }
                        }
                    }
                    else
                    {
                        <p>Translations loading</p>
                    }
                </div>
            }
            else if (character is Kana kana)
            {
                if (!kana.IsYoon)
                {
                    if (kana.Composition is null)
                    {
                        @($"{kana.Literal} - {kana.Reading}")
                    }
                    else
                    {
                        @($"{kana.Composition} - {kana.Reading}")
                    }
                }
            }
            else if (!(character is Yakumono))
            {
                @character.Literal
            }
        </div>
    }
</div>
@code {
    [Parameter]
    public List<JapaneseCharacter> Chars { get; set; }
    [Inject]
    ConfigurationsService Configs { get; set; }
}
