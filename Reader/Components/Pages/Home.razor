@using System.Diagnostics
@using CommunityToolkit.Maui.Storage
@using Microsoft.FluentUI.AspNetCore.Components
@using Microsoft.Maui.Devices
@using Mio.Reader.Components.Viewers
@using Mio.Reader.Components.Pickers
@using System.IO.Compression
@using Mio.Reader.Managers

@inject NavigationManager Navigator

@page "/"

<!--Should have different pages instead of a if-else-->
@if (string.IsNullOrEmpty(PathToLibrary))
{
    <button @onclick="PickLibraryFolder">Pick the library folder</button>
}
else
{
    if (plataform == DevicePlatform.WinUI || UnidicDetermined)
    {
        <Library PathToLibrary="@PathToLibrary" OnBookSelected="@(i => { Navigator.NavigateTo($"/reader?bookIndex={i}");})" />

    }
    else 
    {
        <p>Download the Unidic to proceed. It may take a few minutes</p>
        //TODO ensure this is only called once
        <button @onclick="DownloadUnidic">Download Unidic</button>
    }
}


@code {
    DevicePlatform plataform = DeviceInfo.Current.Platform;
    string? PathToLibrary { get; set; }
    bool UnidicDetermined { get; set; } = false;

    protected override Task OnInitializedAsync()
    {
        if (plataform == DevicePlatform.Android)
        {
            UnidicDetermined = Directory.Exists(Configurations.Current.PathToUnidic);
            InvokeAsync(() => { StateHasChanged(); });
        }
        return base.OnInitializedAsync();
    }

    private async void PickLibraryFolder()
    {
        if (plataform == DevicePlatform.Android)
        {
            if (!await AndroidFilePicker.RequestFilesPermission())
                return;
        }

        FolderPickerResult result = await FolderPicker.Default.PickAsync();
        if (!result.IsSuccessful)
            return;

        PathToLibrary = result.Folder.Path;
        Debug.WriteLine(PathToLibrary);
        StateHasChanged();
    }

    private async void DownloadUnidic()
    {
        //Pretty sure this freezes the UI. Keping like that for testing purposes
        UnidicDetermined = await DataManager.DownloadUnidic();
        StateHasChanged();
    }
}